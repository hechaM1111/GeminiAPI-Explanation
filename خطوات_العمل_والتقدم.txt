خطوات العمل مع Gemini API وإنشاء خدمة الويب
=======================================

أولاً: إعداد وتجهيز API
-----------------
1. حصلنا على مفتاح API من Google:
   AIzaSyDCuWm5sKlxNeWGfdctfBRxvm5zuERVNIs

2. قمنا بتفعيل Gemini API في Google Cloud Console:
   - دخلنا إلى cloud.google.com
   - فعلنا Gemini API
   - اخترنا الإعدادات المناسبة (30 أيام للتقارير، 30 سطر في الصفحة)

3. اختبرنا المفتاح مع الرابط:
   https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=AIzaSyDCuWm5sKlxNeWGfdctfBRxvm5zuERVNIs

ثانياً: إنشاء خدمة الويب
---------------------
1. أنشأنا مجلد المشروع:
   C:\Users\hecham\Desktop\GeminiAPI-Explanation
قمنا بحذف الملف لاننا قمنا بتحميل المستودع بسيغة zip 
ولم يتم فك الضغط بعد مكان الملفات الجديد
"C:\Users\hecham\Desktop\GeminiAPI-Explanation-backup"
2. أنشأنا الملفات الأساسية:
   - server.py: سيرفر Flask للتعامل مع الطلبات
   - requirements.txt: المكتبات المطلوبة
   - gunicorn.conf.py: إعدادات تشغيل السيرفر

3. المكتبات التي نستخدمها:
   - flask==3.1.0
   - requests==2.32.3
   - python-dotenv==1.0.1
   - gunicorn==21.2.0
   - flask-cors==4.0.0

ثالثاً: تجهيز المشروع للنشر
------------------------
1. قمنا بتثبيت Git على الجهاز مع الخيارات التالية:
   - Additional icons
   - Windows Explorer integration
   - Open Git Bash here
   - Open Git GUI here
   - Git LFS
   - Associate .git* configuration files
   - Associate .sh files
   - Check daily for updates
   - Add Git Bash Profile to Windows Terminal

النقطة الحالية
------------
نحن الآن في مرحلة إعداد Git وربطه مع GitHub. الخطوات القادمة:
1. إنشاء حساب على GitHub (إذا لم يكن موجوداً)
2. إعداد Git على الجهاز بمعلومات الحساب
حصلت بعض التغييرات منعتنا من انشاء الربط بنجاح لذالك قمنا بانشاء المستودع وتنزيله على الجهاز بسيغة zip
3. رفع المشروع على GitHub
4. ربط المشروع مع Render للنشر

ما يميز المشروع
-------------
1. واجهة ويب عربية بسيطة وجميلة
2. يمكن استخدامه من أي لغة برمجة
3. يدعم CORS للاستخدام من أي موقع
4. آمن ويستخدم متغيرات البيئة
5. جاهز للنشر على الإنترنت

ملاحظات مهمة
-----------
- لا تشارك مفتاح API مع أحد
- احتفظ بنسخة من هذا الشرح للرجوع إليه
- تأكد من تفعيل API في Google Cloud Console قبل الاستخدام
- عند النشر على Render، ستحتاج لإضافة مفتاح API كمتغير بيئة

للمساعدة والاستفسار
----------------
يمكنك الرجوع إلى:
1. وثائق Gemini API: https://ai.google.dev/docs
2. وثائق Flask: https://flask.palletsprojects.com/
3. وثائق Render: https://render.com/docs
